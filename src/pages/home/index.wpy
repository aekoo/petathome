<style lang="less" src="./index.less"></style>
<template>
  <view class="container">
    <button class="author" open-type="getUserInfo"  bindgetuserinfo="onGotUserInfo" v-if="!openId"></button>
    <!-- <view class="notice-bar" v-if="notice.text">
      <view class="notice-bar-icon"><image src="{{notice.icon||'../../image/bell.png'}}"/></view>
      <view class="notice-bar-text" bindtap="textclick">{{notice.text}}</view>
    </view> -->
    <van-notice-bar class="van-notice" text="{{notice.text}}" backgroundColor="#F0F0F0" color="#656565" wx:if="{{notice.text}}" @tap="toWebview(notice.link)">
      <view class="van-notice-icon" slot="left-icon"><image mode="aspectFill" src="{{notice.icon||'../../image/bell.png'}}"/></view>
    </van-notice-bar>
    <view class="location">
      <view class="location-box" @tap="goPage('/pages/city/index')">
        <image mode="aspectFill" class="location-icon" src="../../image/location.png"/>
        <text class="location-name">{{locationName}}</text>
      </view>
    </view>
    <!-- top banner -->
    <swiper class="top-banner" indicator-dots="{{topBannerList.length>1}}" indicator-color="#5E5E60" indicator-active-color="#FFF" autoplay="true" circular="true" wx:if="{{topBannerList.length>0}}">
      <swiper-item wx:for="{{topBannerList}}" wx:key="unique" data-link="{{item.link}}" @tap="bannerClick">
        <image mode="aspectFill" src="{{item.image}}"/>
      </swiper-item>
    </swiper>
    <!-- 预约 -->
    <view class="feed-pet-box">
      <!-- <block wx:for="{{serviceList}}" wx:key="unique">
        <view class="feed-pet" wx:if="{{item.status==1}}" @tap="goPage(`/pages/orders/place?type=${item.type}`)"><image mode="aspectFill" src="../../image/feed-{{item.type == 1 ? 'dog' : 'cat'}}.png"/></view>
        <view class="feed-pet close" wx:else><image mode="aspectFill" src="../../image/feed-{{item.type == 1 ? 'dog' : 'cat'}}.png"/></view>
      </block> -->
      <block wx:for="{{serviceList}}" wx:key="unique">
        <view class="feed-pet" data-close="{{item.status}}" data-type="{{item.type}}" @tap="subscribe"><image mode="aspectFill" src="../../image/feed-{{item.type == 1 ? 'dog' : 'cat'}}.png"/></view>
      </block>
    </view>
    <!-- 我的爱宠 -->
    <view class="myPetBox">
      <view class="myPetTitle">我的爱宠</view>
      <view class="myPetList">
        <image class="myPetImage" mode="aspectFill" data-id="{{item.petId}}" @tap="editPet" wx:for="{{myPetList}}" wx:key="unique" src="{{item.avatar||'../../image/default_pet.png'}}"/>
      </view>
      <view class="myPetMore" @tap="goPage('/pages/me/mypet')" wx:if="{{myPetMore}}"></view>
      <view class="myPetAdd" @tap="goPage('/pages/me/addPet')"></view>
    </view>
    <!-- info banner -->    
    <swiper class="info-banner" autoplay="true" circular="true" wx:if="{{bannerClick.length>0}}">
      <swiper-item wx:for="{{buttomBannerList}}" wx:key="unique" data-link="{{item.link}}" @tap="bannerClick">
        <view class="swiper-item"></view>
      </swiper-item>
    </swiper>
    <!--toast /-->
  </view>
</template>

<script>
import wepy from '@wepy/core';
import eventHub from '@/common/eventHub';
import { mapState } from '@wepy/x';
import store from '@/store';
import { userLogin, location } from '@/utils/common';
import {
  getTopScrollingText,
  getBanner,
  getServerAvailable,
  gainMyPet
} from '@/api/index.js';

wepy.page({
  store,
  data: {
    locationName: '北京市',
    openId: wx.getStorageSync('openId') || '',
    notice: {},
    topBannerList: [],
    myPetList: [],
    myPetMore: false,
    buttomBannerList: [],
    serviceList: []
  },
  watch: {
    // 监听登录后openId变化
    '$store.state.openId': function(newFlag, oldFlag) {
      if (newFlag != oldFlag) {
        this.openId = newFlag;
        this.getMyPet();
        location();
      }
    },
    // 监听位置变化
    '$store.state.homeCity': function(newFlag, oldFlag) {
      if (newFlag != oldFlag) {
        this.locationName = newFlag;
      }
    },
    //监听flage，更新用户头像等信息
    '$store.state.flag': function(newFlag, oldFlag) {
      if (newFlag != oldFlag) {
        this.getMyPet();
      }
    }
  },

  computed: {},

  methods: {
    onGotUserInfo(res) {
      if (res.$wx.detail.iv) {
        userLogin(true);
      }
    },
    goPage(url) {
      wx.navigateTo({ url });
    },
    subscribe(e) {
      const { close, type } = e.currentTarget.dataset;
      if (close == 0) {
        return wx.showToast({ title: '现在不可以预约哦~', icon: 'none' });
      }
      wx.navigateTo({ url: `/pages/orders/place?type=${type}` });
    },
    editPet(e) {
      const { id } = e.currentTarget.dataset;
      wx.navigateTo({ url: `/pages/me/addPet?petId=${id}` });
    },
    toWebview(url) {
      wx.navigateTo({ url: `/pages/webview?url=${url}` });
    },
    bannerClick(e) {
      const { link } = e.currentTarget.dataset;
      this.toWebview(link);
    },
    // 查询通告
    async getTopScroll(position) {
      try {
        // wx.showLoading({ title: '数据加载中...' });
        let res = await getTopScrollingText({ position });
        const { results = [] } = res.data || {};
        // console.log(results);
        this.notice = results[0];
      } catch (error) {
        wx.showToast({ title: '获取通告信息出错', icon: 'none' });
        return -1;
      }
    },
    // 查询banner
    async getBannerData(position) {
      try {
        // wx.showLoading({ title: '数据加载中...' });
        let res = await getBanner({ position });
        const { results = [] } = res.data || {};
        // console.log(results);
        if (position == 'top') {
          this.topBannerList = results;
        } else if (position == 'buttom') {
          this.buttomBannerList = results;
        }
      } catch (error) {
        wx.showToast({ title: '获取banner信息出错', icon: 'none' });
        return -1;
      }
    },
    // 查询我的宠物
    async getMyPet() {
      try {
        let res = await gainMyPet({ userId: this.openId });
        const { results = {} } = res.data || {};
        if (results.length < 4) {
          this.myPetList = results;
          this.myPetMore = false;
        } else {
          this.myPetList = results.slice(0, 2);
          this.myPetMore = true;
        }
      } catch (error) {
        console.log(error);
        wx.showToast({ title: '查询我的宠物出错', icon: 'none' });
        return -1;
      }
    },
    // 查询预约服务状态
    async getServerAvailable() {
      try {
        let res = await getServerAvailable();
        const { results = {} } = res.data || {};
        this.serviceList = results;
      } catch (error) {
        console.log(error);
        wx.showToast({ title: '查询服务状态出错', icon: 'none' });
        return -1;
      }
    }
  },
  onLoad() {
    this.getTopScroll();
    this.getBannerData('top');
    this.getBannerData('button');
    this.getServerAvailable();
    if (this.openId) {
      this.getMyPet();
      location();
    }
  },
  onShow() {
    if (typeof this.$wx.getTabBar === 'function' && this.$wx.getTabBar()) {
      this.$wx.getTabBar().setData({ selected: 0 });
    }
  }
});
</script>
<config>
{
    navigationBarTitleText: "宠物喂养",
    usingComponents: {
      "van-notice-bar": "~@/components/vant-weapp/notice-bar/index"
    }
}
</config>
