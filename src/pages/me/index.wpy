<style lang="less" src="./index.less"></style>
<template>
  <view class="container">
    <button class="author" open-type="getUserInfo"  bindgetuserinfo="onGotUserInfo" v-if="!openId"></button>
    <view class="userHeader">
        <view class="userHeaderInfo">
            <view class="useHeaderImg">
                <image mode="aspectFill" src="{{userInfo.avatar}}" />
            </view>
            <view class="userHeaderBox">
              <view class="userHeaderName {{userInfo.nickName.length>3?'minName':''}}">{{userInfo.nickName}}</view>
              <!-- <view class="userHeaderPhone">{{userInfo.phone}}</view> -->
            </view>
        </view>
        <view class="myPetBox" @tap="goPage('mypet')">
          <view class="myPetTitle">我的爱宠</view>
          <view class="myPetList">
              <image class="myPetImage" mode="aspectFill" data-id="{{item.petId}}" data-type="{{item.type}}" catchtap="editPet" wx:for="{{myPetList}}" wx:key="unique" src="{{item.avatar||'../../image/default.png'}}"/>
          </view>
          <view class="myPetMore" wx:if="{{myPetMore}}"></view>
          <view class="myPetBoxArrow">
              <image mode="aspectFill" src="../../image/arrow.png"/>
          </view>
        </view>
    </view>
    <view class="userContent">
        <view class="userContentLi" @tap="goPage('personal')">
            <view class="userContentLiIcon"><image src="../../image/info.png" mode="aspectFill"/></view>
            <view class="userContentLiText">个人信息</view>
            <view class="userContentLiArrow">
                <image mode="aspectFill" src="../../image/arrow.png"/>
            </view>
        </view>
        <view class="userContentLi" @tap="goPage('/pages/address/index')">
            <view class="userContentLiIcon"><image src="../../image/address.png" mode="aspectFill"/></view>
            <view class="userContentLiText">管理地址</view>
            <view class="userContentLiArrow">
                <image mode="aspectFill" src="../../image/arrow.png"/>
            </view>
        </view>
        <view class="userContentLi">
            <view class="userContentLiIcon"><image src="../../image/wechat.png" mode="aspectFill"/></view>
            <view class="userContentLiText">客服</view>
            <view class="userContentLiArrow">
                <image mode="aspectFill" src="../../image/arrow.png"/>
            </view>
            <button open-type="contact"></button>
        </view>
        <view class="userContentLi" @tap="goPage('joinTeam')">
            <view class="userContentLiIcon"><image src="../../image/join.png" mode="aspectFill"/></view>
            <view class="userContentLiText">我想成为爱宠官</view>
            <view class="userContentLiArrow">
                <image mode="aspectFill" src="../../image/arrow.png"/>
            </view>
        </view>
    </view>
    <!--toast /-->
  </view>
</template>

<script>
import wepy from '@wepy/core';
import { mapState } from '@wepy/x';
import store from '@/store';
import { userLogin } from '@/utils/common';
import { gainUserInfo, gainMyPet } from '@/api/index.js';

wepy.page({
  store,
  data: {
    openId: wx.getStorageSync('openId') || '',
    userInfo: {
      avatar: '../../image/default.png',
      nickName: '请先登陆'
    },
    myPetList: [],
    myPetMore: false
  },
  watch: {
    // 监听登录后openId变化
    '$store.state.openId': function(newFlag, oldFlag) {
      if (newFlag != oldFlag) {
        this.getUserInfo();
        this.getMyPet();
      }
    },
    //监听flage，更新用户头像等信息
    '$store.state.flag': function(newFlag, oldFlag) {
      if (newFlag != oldFlag) {
        this.getUserInfo();
        this.getMyPet();
      }
    }
  },
  computed: {},

  methods: {
    // login
    onGotUserInfo(res) {
      if (res.$wx.detail.iv) {
        userLogin(true);
      }
    },
    editPet(e) {
      const { id, type } = e.currentTarget.dataset;
      wx.navigateTo({ url: `addPet?petId=${id}&type=${type}` });
    },
    // 查询我的宠物
    async getMyPet() {
      try {
        let res = await gainMyPet({ userId: this.openId });
        const { results = {} } = res.data || {};
        if (results.length < 4) {
          this.myPetList = results;
          this.myPetMore = false;
        } else {
          this.myPetList = results.slice(0, 3);
          this.myPetMore = true;
        }
      } catch (error) {
        console.log(error);
        wx.showToast({ title: '查询我的宠物出错', icon: 'none' });
        return -1;
      }
    },
    // 查询个人信息
    async getUserInfo() {
      this.openId = wx.getStorageSync('openId') || '';
      try {
        let res = await gainUserInfo({ userId: this.openId });
        const { results = {} } = res.data || {};
        this.userInfo = results;
      } catch (error) {
        console.log(error);

        wx.showToast({ title: '获取个人信息出错', icon: 'none' });
        return -1;
      }
    },
    // 页面跳转
    goPage(url) {
      wx.navigateTo({ url });
    }
  },
  onLoad() {
    this.openId = wx.getStorageSync('openId');
    if (this.openId) {
      this.getUserInfo();
      this.getMyPet();
    }
  },
  onShow() {
    if (typeof this.$wx.getTabBar === 'function' && this.$wx.getTabBar()) {
      this.$wx.getTabBar().setData({ selected: 3 });
    }
  }
});
</script>
<config>
{
    navigationBarTitleText: "我的",
    "usingComponents": {}
}
</config>
